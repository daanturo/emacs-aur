From d5c4decb870cc6e68ec3621e60e8f5bc0f2fe42b Mon Sep 17 00:00:00 2001
From: Daanturo <daanturo@gmail.com>
Date: Fri, 17 Jun 2022 18:02:17 +0700
Subject: [PATCH 1/2] Workaround GTK does not recognize Super modifier

---
 src/pgtkterm.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

diff --git a/src/pgtkterm.c b/src/pgtkterm.c
index 13f6c6c3c4..578acbda6f 100644
--- a/src/pgtkterm.c
+++ b/src/pgtkterm.c
@@ -5066,7 +5066,7 @@ pgtk_gtk_to_emacs_modifiers (struct pgtk_display_info *dpyinfo, int state)
     mod |= mod_ctrl;
   if (state & GDK_META_MASK || state & GDK_MOD1_MASK)
     mod |= mod_meta;
-  if (state & GDK_SUPER_MASK)
+  if (state & (GDK_SUPER_MASK | GDK_MOD4_MASK))
     mod |= mod_super;
   if (state & GDK_HYPER_MASK)
     mod |= mod_hyper;
@@ -5089,7 +5089,7 @@ pgtk_emacs_to_gtk_modifiers (struct pgtk_display_info *dpyinfo, int state)
 
   mask = 0;
   if (state & mod_super)
-    mask |= GDK_SUPER_MASK;
+    mask |= (GDK_SUPER_MASK | GDK_MOD4_MASK);
   if (state & mod_hyper)
     mask |= GDK_HYPER_MASK;
   if (state & shift_modifier)
@@ -5207,7 +5207,7 @@ key_press_event (GtkWidget *widget, GdkEvent *event, gpointer *user_data)
       /* While super is pressed, the input method will always always
 	 resend the key events ignoring super.  As a workaround, don't
 	 filter key events with super or hyper pressed.  */
-      if (!(event->key.state & (GDK_SUPER_MASK | GDK_HYPER_MASK)))
+ if (!(event->key.state & ((GDK_SUPER_MASK | GDK_MOD4_MASK) | GDK_HYPER_MASK)))
 	{
 	  if (pgtk_im_filter_keypress (f, &event->key))
 	    return TRUE;
@@ -5223,7 +5223,7 @@ key_press_event (GtkWidget *widget, GdkEvent *event, gpointer *user_data)
          Don't do it here because XLookupString is too eager.  */
       state &= ~GDK_CONTROL_MASK;
       state &= ~(GDK_META_MASK
-		 | GDK_SUPER_MASK | GDK_HYPER_MASK | GDK_MOD1_MASK);
+		 | (GDK_SUPER_MASK | GDK_MOD4_MASK) | GDK_HYPER_MASK | GDK_MOD1_MASK);
 
       nbytes = event->key.length;
       if (nbytes > copy_bufsiz)
-- 
2.38.1


From 944d873641da360a34dee5a67b6ac367d037c72b Mon Sep 17 00:00:00 2001
From: Daanturo <daanturo@gmail.com>
Date: Tue, 22 Nov 2022 14:55:11 +0700
Subject: [PATCH 2/2] Write merge-push.sh

---
 merge-push.sh | 29 +++++++++++++++++++++++++++++
 1 file changed, 29 insertions(+)
 create mode 100755 merge-push.sh

diff --git a/merge-push.sh b/merge-push.sh
new file mode 100755
index 0000000000..f4ac32148f
--- /dev/null
+++ b/merge-push.sh
@@ -0,0 +1,29 @@
+#!/usr/bin/env bash
+
+# set -euo pipefail
+# IFS=$'\n\t'
+
+
+# Auto-abort merge conflicts, not possible when bash exits after those arise
+function abort_merge_conflicts() {
+    if [[ ! $(git ls-files -u) = "" ]]; then
+        echo "ðŸ’—  Aborting merge"
+        git merge --abort
+    fi
+}
+
+set -x
+
+git remote get-url gnu &>/dev/null ||
+    git remote add gnu https://git.savannah.gnu.org/git/emacs.git
+
+# git fetch --all
+
+echo "ðŸ’—  Updating master:"
+git fetch gnu master:master
+
+echo "ðŸ’—  Merging from gnu/master:"
+git merge --no-edit gnu/master
+abort_merge_conflicts
+
+git push --all
-- 
2.38.1

